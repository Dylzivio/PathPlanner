from My_test_map import test2, test3
from cellWalker import go_along_wall, filter_start_pos
from lineOps import line_Endpoint
from mapOps import create_zero_matrix, create_around_layer, map_sliser_deep_bubble, type_of_obtacle
from mapOps import create_filled_contour
from plannerOps import Create_Dependence_Tree, Add_Weight_2dependence

testmap = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0],
    [0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0],
    [0, 1, 1, 1, 1, 1, 3, 2, 3, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 3, 3, 3, 2, 2, 1, 0, 0, 0, 0, 0],
    [0, 1, 1, 1, 2, 2, 3, 3, 2, 2, 3, 2, 3, 4, 2, 2, 2, 2, 2, 3, 3, 5, 4, 2, 1, 1, 0, 0, 0, 0],
    [0, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 3, 3, 4, 4, 3, 3, 4, 3, 3, 3, 5, 4, 3, 2, 1, 1, 0, 0, 0],
    [0, 1, 1, 2, 2, 3, 1, 1, 0, 0, 2, 2, 2, 3, 4, 4, 4, 4, 3, 2, 3, 3, 3, 4, 3, 2, 1, 0, 0, 0],
    [0, 1, 1, 2, 3, 3, 1, 0, 0, 0, 1, 2, 1, 2, 3, 4, 4, 3, 2, 1, 2, 2, 3, 3, 4, 2, 1, 1, 0, 0],
    [0, 1, 1, 2, 3, 2, 0, 0, 0, 0, 0, 1, 1, 2, 3, 4, 4, 3, 2, 1, 1, 1, 2, 3, 3, 3, 2, 1, 1, 0],
    [0, 1, 2, 3, 3, 2, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 3, 2, 1, 0, 0, 0, 1, 2, 3, 3, 2, 1, 1, 0],
    [0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 1, 1, 2, 3, 3, 3, 2, 1, 0, 0, 0, 0, 1, 2, 3, 3, 2, 1, 1, 0],
    [0, 1, 2, 3, 2, 1, 0, 0, 0, 0, 1, 2, 2, 3, 3, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 2, 1, 0],
    [0, 1, 2, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 4, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 3, 2, 1, 1, 0],
    [0, 1, 2, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 4, 4, 3, 2, 1, 1, 0, 1, 2, 4, 4, 5, 3, 2, 1, 0, 0],
    [0, 1, 2, 3, 2, 1, 0, 0, 0, 1, 2, 2, 3, 4, 4, 3, 2, 2, 2, 1, 1, 2, 4, 4, 3, 2, 1, 1, 0, 0],
    [0, 1, 2, 3, 3, 2, 0, 0, 0, 0, 1, 2, 4, 5, 5, 4, 4, 2, 3, 2, 2, 3, 5, 5, 3, 2, 1, 0, 0, 0],
    [0, 1, 2, 3, 3, 3, 2, 0, 0, 1, 1, 2, 3, 4, 5, 5, 4, 3, 3, 3, 3, 4, 5, 4, 3, 2, 1, 0, 0, 0],
    [0, 1, 2, 2, 3, 4, 3, 2, 2, 2, 2, 3, 3, 4, 5, 5, 5, 5, 4, 4, 5, 5, 4, 3, 2, 1, 1, 0, 0, 0],
    [0, 1, 1, 2, 3, 4, 4, 4, 4, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 3, 2, 1, 1, 0, 0, 0],
    [0, 0, 1, 1, 2, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 2, 1, 1, 0, 0, 0, 0],
    [0, 0, 0, 1, 2, 3, 4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]




x_start, y_start = line_Endpoint(test2, 0, 0, 9, 10)
direction = {'Up': [-1, 0], 'Down': [1, 0], 'Left': [0, -1], 'Right': [0, 1]}
direction_ = {'ul': [-1, -1], 'ur': [-1, 1], 'dr': [1, 1], 'dl': [1, -1]}
x_start, y_start = filter_start_pos(x_start, y_start, direction, direction_, test3)
print(x_start,y_start)
dep_tree = Create_Dependence_Tree(test3, [x_start, y_start], [10, 10])
# dep_tree = Add_Weight_2dependence(test2, dep_tree)
print(dep_tree)